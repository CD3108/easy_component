apply plugin: 'com.android.application'
apply plugin: 'android-aspectjx'

def config = rootProject.ext.android
def thirdDependencies = rootProject.ext.thirdDependencies

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    defaultConfig {
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        flavorDimensions "component"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    useLibrary 'org.apache.http.legacy'
    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    aspectjx {
        exclude 'com.android.support'
        exclude 'com.google.gson'
    }

    dexOptions {
        //预编译
        preDexLibraries true
        //支持大工程
        jumboMode = true
        //线程数
        threadCount = 16
        //dex内存，公式：dex内存 + 1G < Gradle内存
        javaMaxHeapSize "4g"
        additionalParameters = [
                '--multi-dex',//多分包
                '--set-max-idx-number=60000'//每个包内方法数上限
        ]
    }

    lintOptions {
        checkReleaseBuilds false
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }

    productFlavors {

        def app_name = "easy_component"

        vdev {
            resValue "string", "app_name", app_name
            dimension "component"
        }

        vtest {
            applicationId "com.xiaochen.emvp.test"
            resValue "string", "app_name", app_name + "Test"
            dimension "component"
        }
    }

    configurations.all {
        resolutionStrategy {
            force 'org.jetbrains:annotations:16.0.1'
            force 'org.jetbrains.kotlin:kotlin-stdlib:1.3.61'
            force 'org.jetbrains.kotlin:kotlin-stdlib-common:1.3.61'
            force 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
            force 'androidx.annotation:annotation:1.1.0'
        }
    }

    configurations.all {
        resolutionStrategy {
            failOnVersionConflict()
        }
    }

}

dependencies {

    implementation thirdDependencies.arouter
    annotationProcessor thirdDependencies.arouterCompiler

    implementation project(':component:common_base')
    implementation project(':component:common_data')

    runtimeOnly project(':module:module_widget')
    runtimeOnly project(':module:module_bluetooth')
    runtimeOnly project(':module:module_app')
    runtimeOnly project(':module:module_aop')
    runtimeOnly project(':module:module_router1')
    runtimeOnly project(':module:module_router2')
    runtimeOnly project(':module:module_mvp')
    runtimeOnly(project(':module:module_mvvm'))
    runtimeOnly(project(':module:module_dagger2'))
    runtimeOnly(project(':module:module_jetpack')) {
        exclude group: 'androidx.arch.core'
        exclude group: 'androidx.annotation'
        exclude group: 'androidx.fragment'
        exclude group: 'androidx.transition'
        exclude group: 'androidx.core'
        exclude group: 'androidx.collection'
        exclude group: 'androidx.versionedparcelable'
        exclude group: 'androidx.lifecycle'
        exclude group: 'io.reactivex.rxjava2'
        exclude group: 'org.jetbrains.kotlin'
    }
}