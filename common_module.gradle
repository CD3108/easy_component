apply plugin: 'com.android.library'
// android配置
def config = rootProject.ext.android
def thirdDependencies = rootProject.ext.thirdDependencies

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion
    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        minSdkVersion config.minSdkVersion
        versionCode config.versionCode
        versionName config.versionName
        // arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        abortOnError false
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }
}

dependencies {
    api thirdDependencies.arouter
    annotationProcessor thirdDependencies.arouterCompiler
}